        if (fenceEnd !== -1) {
          raw = raw.slice(fenceStart + 3, fenceEnd).replace(/^json\s*/i, "");
        }
      }
      const parsed = JSON.parse(raw);
      // Basic shape check
      if (parsed && typeof parsed === "object" && parsed.spending_analysis) {
        structured = JSON.stringify(parsed);
      }
    } catch {
      // leave structured undefined if parsing fails
    }

    await ctx.runMutation(internal.aiData.saveInsight, {
      content,
      structured,
      promptKind: args.promptKind ?? "spending_analysis",
      model: selectedModel,
    });

    return { ok: true };
  },
});
// ... keep existing code (anything after analyzeUser, if any)
